<h3 id="ServerRequirements">Server Requirements</h3>
<section>
    <p>General requirements</p>
    <ul>
        <li><code>PHP >= 5.6</code></li>
        <li><code>Short tag enabled into php.ini (short_open_tag = On)</code></li>
        <li><code>PDO PHP Extension</code></li>
    </ul>
    <p>Apache modules enabled (httpd.conf):</p>
    <ul>
        <li>
            <code>mod_rewrite</code>
        </li>
        <li>
            <code>mod_headers</code>
        </li>
        <li>
            <code>mod_filters</code>
        </li>
    </ul>
    <p>Virtual host configuration:</p>
    <pre>&lt;Directory /var/www/html&gt;
    Options FollowSymLinks MultiViews
    AllowOverride All
    Order allow,deny
    allow from all
&lt;/Directory&gt;</pre>
</section>

<h3 id="Installation">Installation</h3>
<section>
    <p>Via GIT Clone</p>
    <pre>git clone https://github.com/offmania9/boostack.git</pre>
    <p>Via Composer</p>
    <pre>composer require offmania9/boostack</pre>
    <p>Direct download</p>
    <a href="https://github.com/offmania9/boostack" target="_blank">https://github.com/offmania9/boostack</a>
</section>

<h3 id="AutomaticConfiguration">Automatic Configuration</h3>
<section>
    <p>Go to</p>
    <pre>http://&lt;your_local_path_to_boostack_installation&gt;/setup</pre>
    <p>and begin the automated setup procedure.</p>
    <p>At first, the setup will check for the PHP and Apache configurations</p>
    <img src="<?= $boostack->registerImgFile("boostack_setup_1.jpg") ?>" alt="Boostack Setup 1"/>
    <p>Then you will be prompted to insert your environment configuration parameters</p>
    <img src="<?= $boostack->registerImgFile("boostack_setup_2.jpg") ?>" alt="Boostack Setup 2"/>
    <p>When the setup procedure is ended, you will see a message that remember you to delete or rename "setup" folder
        from the project.</p>
    <img src="<?= $boostack->registerImgFile("boostack_setup_3.jpg") ?>" alt="Boostack Setup 3"/>
</section>

<h3 id="ManualConfiguration">Manual Configuration</h3>
<p>Alternatively to the automatic setup, you can proceed with manual configuration by copying and renaming the file
    <code>config/env/sample.env.php</code>
    to <code>config/env/env.php</code> and fill it with your preferred configurations.</p>

<h3 id="FriendlyURLsConfiguration">Friendly URLs Configuration</h3>
<p>Boostack includes a <code>.htaccess</code> file that is used to provide friendly URLs without the file extension .php
    in the path.</p>
<p>There are the one served by default:</p>
<pre>RewriteRule ^home$ index.php [L]
RewriteRule ^setup$ /setup/index.php [L]
RewriteRule ^docs/([a-zA-Z0-9_-]+)$ documentation.php?docpath=$1 [L]
RewriteRule ^docs$ documentation.php [L]
RewriteRule ^download$ download.php [L]
RewriteRule ^login$ login.php [L]
RewriteRule ^registration$ registration.php [L]
RewriteRule ^logout$ logout.php [L]
RewriteRule ^api/([^\.]+)$ api.php?request=$1 [L]</pre>

<h3 id="AccessingConfigurationValues">Accessing Configuration Values</h3>
<p>You may easily access your configuration values using the <code>Config</code> class from anywhere in your
    application.</p>
<pre>Config::get("configuration_key")</pre>

<h3 id="DevelopmentMode">Development Mode</h3>
<p>
    When your application is in development mode, errors and exceptions will be displayed for all requests into your
    application.
    This makes it easy to debug your application while coding.
    You can edit the development mode configuration in the <code>config/env/env.php</code> file.
    To check if the application is in development mode, you can use:
<pre>
    if(Config::get('developmentMode')) {
        ...
    }
</pre>
</p>