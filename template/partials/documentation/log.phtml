<h3>Log</h3>
<p>Boostack log is composed by two type of logging system.<br/>
    The log system log: loglevel, username, ip, useragent, referrer, query and message.<br/>
    It handles seven type of log level:
</p>
<ul>
    <li><code>Log_Level::ERROR</code></li>
    <li><code>Log_Level::WARNING</code></li>
    <li><code>Log_Level::FAILURE</code></li>
    <li><code>Log_Level::INFORMATION</code></li>
    <li><code>Log_Level::SUCCESS</code></li>
    <li><code>Log_Level::CRONJOB</code></li>
</ul>
<p>And you can choose where to save your log. In database or into a file if your project don't use database</p>
<ul>
    <li><code>Log_Driver:FILE</code></li>
    <li><code>Log_Driver:DATABASE</code></li>
</ul>
<p>For handle the logging system you just need to use  where you need. <pre><code>Logger::write($message, $level, $type)</code></pre><br/>
$message: Can be null<br/>
$level: Correspond Log_Level<br/>
$type: Correspond Log_Driver</p>
<p>Also you can use <code>Log_Database_List</code> class to view list of your log, and you have all method used in <code>BaseList</code> class.</p>
<p>The <code>Log_Database_Entity</code> class offer some method for help you organize your log view into frontend:</p>
<ul>
    <li><code>jsonSerialize()</code><br/>
    Serialize with data into array with formatted data to fit your need.</li>
    <li><code>getAttrListForSearch()</code><br/>
    This method return a array of attribute from log table.</li>
</ul>