<h2>cUrl</h2>
<p>The CurlRequest class lets you make HTTP requests in PHP.</p>

<h4>Requirements</h4>
<p>In order to use PHP's cURL functions you need to install the Â» libcurl package.</p>
<p>PHP requires that you use libcurl 7.0.2-beta or higher.<br/>
    In PHP 4.2.3, you will need libcurl version 7.9.0 or higher. <br/>
    From PHP 4.3.0, you will need a libcurl version that's 7.9.8 or higher.<br/>
    PHP 5.0.0 requires a libcurl version 7.10.5 or greater.</p>

<h4>Methods</h4>
<ul>
    <li><code>CurlRequest::setEndpoint($endpoint)</code><br/>
    Set the endpoint where make HTTP request to the cUrl.</li>
    <li><code>CurlRequest::setIsPost($isPost)</code><br/>
    The method accept boolean value (true or false) in case your request is in POST method otherwise set into FALSE.</li>
    <li><code>CurlRequest::setReturnTransfer($returnTransfer)</code><br/>
     Set TRUE to return the raw output</li>
    <li><code>CurlRequest::setGetFields($fields)</code><br/>
    Set the method Get with their $fields</li>
    <li><code>CurlRequest::setPostFields($fields)</code><br/>
    Set the field with POST method, This parameter can be passed as an array with the field name as key and field data as value.</li>
    <li><code>CurlRequest::setCustomHeader($data)</code><br/>
    The headers specified in this parameter will be used in requests both to servers and proxies. Like 	An array of HTTP header fields to set, in the format array('Content-type: text/plain', 'Content-length: 100').</li>
    <li><code>CurlRequest::send()</code><br/>
    Execute cUrl request, and the return data can be obtained using Class <code>MessageBag</code>. <br/>
        The result if the cUrl request have success can be obtained by using method <code>getData</code>.<br/>
        In case of error you can check the existing of error using method <code>hasError</code> and <code>getErrorMessage</code></li>
</ul>