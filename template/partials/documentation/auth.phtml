<h2>Auth</h2>
<p>Boostack comes with a user authentication system.
    It handles user accounts, permissions and cookie-based user sessions.</p>
<h4>Methods</h4>
<ul>
    <li><code>Auth::loginByUsernameAndPlainPassword($user, $password, $rememberMe)</code><br/>
        This method accept three parameter: User, Password and boolean value(true or false) to remember the user,<br/>
        The method check the user login function and if username and password is correct and match the all criteria you can continue otherwise return error.
    </li>
    <li><code>Auth::loginByUserID($userID)</code><br/>
    If you have already a User ID you can use this method example: on registration phase when you create a user and you want to login with your data just created.
    </li>
    <li><code>Auth::loginByCookie($cookieValue)</code><br/>
        The method check if user have valid remember cookie session.
    </li>
    <li><code>Auth::isLoggedIn</code><br/>
        This method control if the user is already logged in or not and return boolean true or false.
    </li>
    <li><code>Auth::logout</code><br/>
    Use this method to logout a user.
    </li>
    <li><code>Auth::getLastTry</code><br/>
    Return the last attempt of login from the session.
    </li>
    <li><code>Auth::impressLastTry</code><br/>
    Set last attempt of login in the session.
    </li>
    <li><code>Auth::getUserLoggedObject</code><br/>
    Return a object containing visible data of current logged user.</li>
    <li><code>Auth::isTimerLocked</code><br/>
        If the login_lockStrategy config is timer this method block the login form to be submitted by user until the time of login_secondsFormBlocked config is has not been overcome.
    </li>
    <li><code>Auth::haveToShowCaptcha</code><br/>
        Depending on the login_lockStrategy config this method permit to show captcha on login form or hide it.
    </li>
    <li><code>Auth::checkAndLogin($username, $password, $cookieRememberMe, $throwException)</code><br/>
    This method check username and email existing in login phase if all data is checked and exist the method call login method.
    </li>
    <li><code>Auth::login($strUsername, $strPlainPassword, $hashedPassword)</code><br/>
        This method according to userToLogin configuration check password and username to return true or false in case of login success.
    </li>
    <li><code>Auth::reCaptchaVerify($response)</code><br/>
    This method verify server side reCaptcha response from google and verify the google reCaptcha code.
    </li>
    <li><code>Auth::checkAcceptedTimeFromLastLogin($lastLogin)</code><br/>
        The method check the time from last login fail and compare with the second to block to retry to login.
    </li>
</ul>